import { signIn, signOut, useSession } from 'next-auth/react'
import Head from 'next/head'

import { api } from '~/utils/api'

export default function Home() {
    const hello = api.example.hello.useQuery({ text: 'from tRPC' })
    const passage = api.passage.passage.useQuery('asdf')

    return (
        <div className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <nav className="container flex items-center justify-center gap-12 bg-black px-4 py-16 ">
                <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
                    type the word
                </h1>
                <div className="flex flex-col items-center gap-2">
                    <p className="text-2xl text-white">
                        {hello.data
                            ? hello.data.greeting
                            : 'Loading tRPC query...'}
                    </p>
                    <AuthShowcase />
                </div>
            </nav>

            <main>
                <p>{passage.data?.passages.at(0)}</p>
                {JSON.stringify(passage.data)}
            </main>
        </div>
    )
}

function AuthShowcase() {
    const { data: sessionData } = useSession()

    const { data: secretMessage } = api.example.getSecretMessage.useQuery(
        undefined, // no input
        { enabled: sessionData?.user !== undefined },
    )

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-white">
                {sessionData && (
                    <span>Logged in as {sessionData.user?.name}</span>
                )}
                {secretMessage && <span> - {secretMessage}</span>}
            </p>
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={
                    sessionData ? () => void signOut() : () => void signIn()
                }
            >
                {sessionData ? 'Sign out' : 'Sign in'}
            </button>
        </div>
    )
}
