@tailwind base;
@tailwind components;
@tailwind utilities;

/*
  Radix ui popups use `margin-right` to prevent overflow hidden from causing layout shift when popups come up.
  We want to use `margin-left` to prevent layout shift, so that it matches between overflow on 119 and no overflow on 1.
  So we need to override the margin-right with and set margin-left to 100vw (screen - gutter) - 100% (content width).
 */
html {
    margin-left: calc(100vw - 100%);
}
body[style] {
    margin: 0 auto !important;
}

/* focus-within is required because inputs have no content, and `:before` is prepended to content.*/
.svg-outline:focus,
.svg-outline-sm:focus,
.svg-outline-within:focus-within * {
    @apply outline-none;
}

.svg-outline-within:focus-within:before {
    @apply -inset-2;
    content: ' ';
    background-color: oklch(var(--color-primary));
    -webkit-mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="black" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
    mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="black" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
    position: absolute;
}

.svg-outline-override,
.svg-outline:focus:before,
.svg-outline-sm:focus:before,
.svg-outline-xs:focus:before,
.svg-outline-stubby:focus:before {
    @apply -inset-2;
    content: ' ';
    background-color: oklch(var(--color-primary));
    -webkit-mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="black" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
    mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="black" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
    position: absolute;
}

.svg-outline-sm:focus:before {
    @apply -inset-1;
}

.svg-outline-xs:focus:before {
    @apply inset-0;
}

.svg-outline-stubby:focus:before {
    @apply -bottom-0.5 -left-3 -right-3 -top-0.5;

    background-color: oklch(var(--color-primary));
    -webkit-mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="var(--color-primary)" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
    mask-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" %3E%3Crect x="0" y="0" width="100%25" height="100%25" stroke-width="4" stroke="black" fill="transparent" stroke-dasharray="6 5" /%3E%3C/svg%3E');
}
.hazard {
    border-image: repeating-linear-gradient(
            -80deg,
            white,
            white 10px,
            black 10px,
            black 20px
        )
        20;
}

.min-h-screen-1px {
    @apply min-h-[calc(100vh_-_1px)];
}

body {
    @apply bg-secondary;
}

/* if dark mode make scrollbar dark */
@media (prefers-color-scheme: dark) {
    :root {
        color-scheme: dark;
    }
}

.correct {
    @apply text-success;
}

.incorrect {
    @apply text-error;
}

.extra {
    @apply text-error;
    filter: brightness(65%);
}
